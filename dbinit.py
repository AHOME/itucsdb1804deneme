import os
import sys

import psycopg2 as dbapi2

INIT_STATEMENTS = [
"""
    CREATE TABLE BOOK (
    BOOK_ID         SERIAL PRIMARY KEY,
    BOOK_NAME       VARCHAR(100),
    RELEASE_YEAR    SMALLINT,
    EXPLANATION     VARCHAR(1000)
)  """,

"""
CREATE TABLE BOOK_EDITION (
    BOOK_ID         INTEGER REFERENCES BOOK (BOOK_ID),
    EDITION_NUMBER  SMALLINT,
    ISBN            NUMBER UNIQUE,
    PUBLISHER       VARCHAR(100),
    PUBLISH_YEAR    SMALLINT,
    NUM_OF_PAGES    SMALLINT,
    LANGUAGE        VARCHAR(50),
    PRIMARY KEY     (BOOK_ID, EDITION_NUMBER)
)  """,

"""
CREATE TABLE CATEGORY (
    CATEGORY_ID     SERIAL PRIMARY KEY,
    CATEGORY_NAME   VARCHAR(50)
)  """,

"""
CREATE TABLE BOOK_CATEGORY (
    BOOK_ID         INTEGER REFERENCES BOOK (BOOK_ID),
    CATEGORY_ID     INTEGER REFERENCES CATEGORY (CATEGORY_ID),
    PRIMARY KEY     (BOOK_ID, CATEGORY_ID)
)  """,

"""
CREATE DOMAIN GENDER_TYPE AS CHAR(1)
CHECK (
    (VALUE = 'F') OR (VALUE = 'M') OR (VALUE = 'O')
)  """,

"""
CREATE TABLE PERSON (
    PERSON_ID       SERIAL PRIMARY KEY,
    PERSON_NAME     VARCHAR(50) NOT NULL,
    SURNAME         VARCHAR(50) NOT NULL,
    GENDER          GENDER_TYPE,
    DATE_0F_BIRTH   DATE NOT NULL,
    NATIONALITY     VARCHAR(50)
)  """,

"""
CREATE TABLE CUSTOMER (
    CUSTOMER_ID     SERIAL PRIMARY KEY,
    PERSON_ID       INTEGER REFERENCES PERSON (PERSON_ID) UNIQUE,
    USERNAME        VARCHAR(20) UNIQUE NOT NULL,
    EMAIL           VARCHAR(50) UNIQUE NOT NULL,
    PASS_HASH       CHAR(44) NOT NULL,
    PERSON_PHONE    CHAR(10) UNIQUE NOT NULL,
    IS_ACTIVE       BOOLEAN DEFAULT TRUE
)  """,

"""
CREATE TABLE ADDRESS (
    ADDRESS_ID      SERIAL PRIMARY KEY,
    ADDRESS_NAME    VARCHAR(30),
    COUNTRY         VARCHAR(30) NOT NULL,
    CITY            VARCHAR(30) NOT NULL,
    DISTRICT        VARCHAR(30),
    NEIGHBORHOOD    VARCHAR(30),
    AVENUE          VARCHAR(30),
    STREET          VARCHAR(30),
    NUMBER          VARCHAR(10),
    ZIPCODE         CHAR(5),
    EXPLANATION     VARCHAR(500)
)  """,

"""
CREATE TABLE CUSTOMER_ADDRESS (
    CUSTOMER_ID     INTEGER REFERENCES CUSTOMER (CUSTOMER_ID),
    ADDRESS_ID      INTEGER REFERENCES ADDRESS (ADDRESS_ID),
    PRIMARY KEY     (CUSTOMER_ID, ADDRESS_ID)
)  """,

"""
CREATE TABLE AUTHOR (
    AUTHOR_ID       SERIAL PRIMARY KEY,
    PERSON_ID       INTEGER REFERENCES PERSON (PERSON_ID),
    BIOGRAPHY       VARCHAR(1000)
)  """,

"""
CREATE TABLE BOOK_AUTHOR (
    BOOK_ID         INTEGER REFERENCES BOOK (BOOK_ID),
    AUTHOR_ID       INTEGER REFERENCES AUTHOR (AUTHOR_ID),
    PRIMARY KEY     (BOOK_ID, AUTHOR_ID)
)  """,

"""
CREATE TABLE STORE (
    STORE_ID        SERIAL PRIMARY KEY,
    STORE_NAME      VARCHAR(100) NOT NULL,
    STORE_PHONE     CHAR(10) UNIQUE NOT NULL,
    ADDRESS_ID      INTEGER REFERENCES ADDRESS (ADDRESS_ID),
    EMAIL           VARCHAR(50) UNIQUE NOT NULL,
    WEBSITE         VARCHAR(50) UNIQUE,
    DATE_ADDED      DATE NOT NULL DEFAULT CURRENT_DATE,
    EXPLANATION     VARCHAR(1000)
)  """,

"""
CREATE TABLE STORE_BOOK_EDITION (
    STORE_ID        INTEGER REFERENCES STORE (STORE_ID),
    BOOK_ID         INTEGER,
    EDITION_NUMBER  SMALLINT,
    REMAINING       SMALLINT NOT NULL DEFAULT 0,
    ACTUAL_PRICE    NUMERIC(3, 2),
    NUM_OF_SELLS    SMALLINT DEFAULT 0,
    DATE_ADDED      DATE NOT NULL DEFAULT CURRENT_DATE,
    EXPLANATION     VARCHAR(500),
    FOREIGN KEY     (BOOK_ID, EDITION_NUMBER) REFERENCES BOOK_EDITION (BOOK_ID, EDITION_NUMBER),
    PRIMARY KEY     (STORE_ID, BOOK_ID, EDITION_NUMBER)
)  """,

"""
CREATE TABLE TRANSACTION (
    TRANSACTION_ID  SERIAL PRIMARY KEY,
    CUSTOMER_ID     INTEGER REFERENCES CUSTOMER (CUSTOMER_ID),
    ADDRESS_ID      INTEGER REFERENCES ADDRESS (ADDRESS_ID),
    TRANS_DATE      TIMESTAMP,
    PAYMENT_TYPE    VARCHAR(10),
    EXPLANATION     VARCHAR(200)
)  """,

"""
CREATE TABLE TRANSACTION_BOOK_ROW (
    TRANSACTION_ID  INTEGER REFERENCES TRANSACTION (TRANSACTION_ID),
    STORE_ID        INTEGER,
    BOOK_ID         INTEGER,
    EDITION_NUMBER  SMALLINT,
    PIECE           SMALLINT DEFAULT 1,
    UNIT_PRICE      NUMERIC(3, 2),
    FOREIGN KEY     (STORE_ID, BOOK_ID, EDITION_NUMBER) REFERENCES STORE_BOOK_EDITION (STORE_ID, BOOK_ID, EDITION_NUMBER),
    PRIMARY KEY     (TRANSACTION_ID, STORE_ID, BOOK_ID, EDITION_NUMBER)
)  """,

"""
CREATE DOMAIN RATE_TYPE AS SMALLINT
CHECK (
    (VALUE >= 0) AND (VALUE <= 5)
)  """,

"""
CREATE TABLE COMMENT (
    COMMENT_ID      SERIAL PRIMARY KEY,
    CUSTOMER_ID     INTEGER REFERENCES CUSTOMER (CUSTOMER_ID),
    BOOK_ID         INTEGER REFERENCES BOOK (BOOK_ID),
    COMMENT_TITLE   VARCHAR(50) NOT NULL,
    COM_STATEMENT   VARCHAR(500) NOT NULL,
    TIME_ADDED      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TIME_UPDATED    TIMESTAMP DEFAULT NULL,
    RATING          RATE_TYPE
)  """
]


def initialize(url):
    with dbapi2.connect(url) as connection:
        try:
            cursor = connection.cursor()
            for statement in INIT_STATEMENTS:
                cursor.execute(statement)
            cursor.close()
        except dbapi2.DatabaseError:
            connection.rollback()


if __name__ == "__main__":
    url = os.getenv("DATABASE_URL")
    if url is None:
        print("Usage: DATABASE_URL=url python dbinit.py", file=sys.stderr)
        sys.exit(1)
    initialize(url)
